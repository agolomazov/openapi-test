openapi: 3.0.0
info:
  title: student-api-spec
  version: '1.0'
  description: Тестовое АПИ для работы со студентами
  contact:
    name: Natalya Shipelova
    url: 'https://vk.com/natal-shipelova'
    email: nata@netology.ru
  termsOfService: 'http://terms'
  license:
    name: MIT
    url: 'http://mit.com'
servers:
  - url: 'http://localhost:3000'
    description: Developer server
  - url: 'https://production-edu-platoform'
    description: Production
tags:
  - name: Задачи
    description: Таски в системе
    externalDocs:
      url: https://netology.ru/docs/tasks
  - name: Курсы
    description: Курсы в системе
    externalDocs:
      url: https://netology.ru/docs/courses
  - name: Студенты
    description: Студенты
    externalDocs:
      url: https://netology.ru/docs/courses
paths:
  '/students/{userId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: userId
        in: path
        required: true
        description: ID студента
    get:
      summary: Получение студента по ID
      tags:
        - Студенты
      responses:
        '200':
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: ../models/Student.yaml
              examples: {}
        '404':
          description: Студент не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Код ошибки
                  message:
                    type: string
                    description: Текст ошибки
                required:
                  - code
                  - message
              examples:
                404NotFound:
                  value:
                    code: 404
                    message: Ничего нэма
      operationId: getStudentById
      description: получение данных о студенте по ID
      security:
        - jwt: []
    patch:
      summary: Обновление данных о студенте
      operationId: updateStudentById
      responses:
        '200':
          description: Обновление пользователя
          content:
            application/json:
              schema:
                $ref: ../models/Student.yaml
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    firstName: Наталия
                    lastName: Шипелова
                    email: nata@example.com
                    phone: 987-987-22
                    birthDay: '1990-08-25'
      description: Обновление информации о пользователе
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Student.yaml
            examples:
              example-1:
                value:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  firstName: Наталия
                  lastName: Шипелова
                  email: nata@example.com
                  phone: 987-987-22
                  birthDay: '1990-08-25'
        description: Обновление данных о пользователе
      tags:
        - Студенты
  /user:
    post:
      summary: Добавление нового пользователя
      operationId: createStudent
      responses:
        '200':
          description: Студент создан
          content:
            application/json:
              schema:
                $ref: ../models/Student.yaml
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    firstName: Наталия
                    lastName: Шипелова
                    email: nata@example.com
                    phone: 987-987-22
                    birthDay: '1990-08-25'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Student.yaml
            examples: {}
        description: Добавление новой сущности Студента
      description: Добавление нового студента
      tags:
        - Студенты
  /todos:
    get:
      summary: Получение списка всех задач
      tags:
        - Задачи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Todo.yaml
              examples:
                example-1:
                  value:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title: Тестовая задача №1
                      description: Описание тестовой задачи №1
                      complete: false
                      completed:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        firstName: Наталия Шипелова
                        lastName: string
                        email: user@example.com
                        phone: 987-987-22
                        birthDay: '2019-08-24'
                        skills:
                          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            title: React
      operationId: getTodos
      description: Получение списка задач
      security:
        - jwt: []
    post:
      summary: Создание задачи
      tags:
        - Задачи
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Todo.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
              examples:
                example-1:
                  value:
                    code: 400
                    message: Bad request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
              examples:
                example-1:
                  value:
                    code: 401
                    message: Не авторизованный пользователь
      operationId: createTodo
      description: Создание задачи
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Todo.yaml
  '/todos/{todoId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: todoId
        in: path
        required: true
    get:
      summary: Получение задачи по ID
      description: Получение задачи по ID
      tags:
        - Задачи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Todo.yaml
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    title: 'Тестовая задача #1'
                    description: Описание тестовой задачи №1
                    complete: true
                    completed:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      firstName: Наталия Шипелова
                      lastName: string
                      email: user@example.com
                      phone: 987-987-22
                      birthDay: '2019-08-24'
                      skills:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          title: HTML
      operationId: getTodoByID
      security:
        - jwt: []
    put:
      summary: Заменить задачу
      description: Заменить задачу по ID
      tags:
        - Задачи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Todo.yaml
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    title: 'Тестовая задача #1'
                    description: Описание тестовой задачи №1
                    complete: true
                    completed:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      firstName: Наталия Шипелова
                      lastName: string
                      email: user@example.com
                      phone: 987-987-22
                      birthDay: '2019-08-24'
                      skills:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          title: HTML
      operationId: replaceTodoById
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Todo.yaml
            examples:
              example-1:
                value:
                  title: 'Тестовая задача #1'
                  description: Описание тестовой задачи №1
                  complete: true
                  completed:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    firstName: Наталия Шипелова
                    lastName: string
                    email: user@example.com
                    phone: 987-987-22
                    birthDay: '2019-08-24'
                    skills:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title: HTML
    patch:
      summary: Обновить задачу
      description: Обновить задачу по ID
      tags:
        - Задачи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Todo.yaml
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    title: 'Тестовая задача #1'
                    description: Описание тестовой задачи №1
                    complete: true
                    completed:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      firstName: Наталия Шипелова
                      lastName: string
                      email: user@example.com
                      phone: 987-987-22
                      birthDay: '2019-08-24'
                      skills:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          title: HTML
      operationId: updateTodoById
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Todo.yaml
            examples:
              example-1:
                value:
                  title: 'Тестовая задача #1'
                  description: Описание тестовой задачи №1
                  complete: true
                  completed:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    firstName: Наталия Шипелова
                    lastName: string
                    email: user@example.com
                    phone: 987-987-22
                    birthDay: '2019-08-24'
                    skills:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title: HTML
    delete:
      description: Удалить задачу по ID
      summary: Удалить задачу
      tags:
        - Задачи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Todo.yaml
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    title: 'Тестовая задача #1'
                    description: Описание тестовой задачи №1
                    complete: true
                    completed:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      firstName: Наталия Шипелова
                      lastName: string
                      email: user@example.com
                      phone: 987-987-22
                      birthDay: '2019-08-24'
                      skills:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          title: HTML
      operationId: removeTodoById
      security:
        - jwt: []
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
